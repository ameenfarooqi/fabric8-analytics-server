name: Slash Command Dispatch
on:
  issue_comment:
    types: [created]

env:
  REGISTRY:  ghcr.io
  REPOSITORY: fabric8-analytics-server
  DEFAULT_TAG: latest
  FULL_NAME: bayesian-bayesian-api
  TESTS_IMAGE: server-tests
  ORGANIZATION: practice-fabric8-analytics

jobs:
  slashCommandDispatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch origin +refs/pull/${{ github.event.issue.number }}/merge
          git checkout FETCH_HEAD
      - name: Slash Command Dispatch
        uses: peter-evans/slash-command-dispatch@v2
        id: check
        with:
          token: ${{ secrets.CR_PAT }}
          commands: |
            build-image
      - name: send comment 
        if: steps.check.outputs.triggered == 'true'
        env:
          URL: ${{ github.event.issue.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": ":test_tube: [CI has Started Image Build]( https://github.com/'"$GITHUB_REPOSITORY"'/actions/runs/'"$GITHUB_RUN_ID"')" }'
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.ACTOR }}
          password: ${{ secrets.CR_PAT }}
      - name: Build image
        run: bash qa/runtest.sh 
      - name: Tag and Push
        run: |
          docker tag ${{env.TESTS_IMAGE}}:${{env.DEFAULT_TAG}} ${{env.REGISTRY}}/${{env.ORGANIZATION}}/${{env.REPOSITORY}}/${{env.FULL_NAME}}:${{env.DEFAULT_TAG}};
          docker push ${{env.REGISTRY}}/${{env.ORGANIZATION}}/${{env.REPOSITORY}}/${{env.FULL_NAME}}:${{env.DEFAULT_TAG}};
      - name: Create success comment
        if:  steps.check.outputs.triggered == 'true' &&  success()

        env:
          URL: ${{ github.event.issue.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": ":v: [Image Build Successfull]( https://github.com/'"$GITHUB_REPOSITORY"'/actions/runs/'"$GITHUB_RUN_ID"') Avaliable at: ```ghcr.io/practice-fabric8-analytics/fabric8-analytics-server/bayesian-bayesian-api:latest``` " }'    

      - name: Create fail comment
        if:  steps.check.outputs.triggered == 'true' && failure()

        env:
          URL: ${{ github.event.issue.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": ":facepalm: [Build and Push Image Failed]( https://github.com/'"$GITHUB_REPOSITORY"'/actions/runs/'"$GITHUB_RUN_ID"')" }'
        
        
